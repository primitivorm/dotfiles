# header
#############################################################
# my snippets for csharp code
#############################################################
snippet header
/*
*********************************************************
*   Nombre: `!v expand('%:t')`
*********************************************************
*   Autor: ${2:Ing. Primitivo R. Montero}
*   Fecha de creación: `!v strftime("%d-%m-%Y")`
*   Descripción: ${1}
*********************************************************
*   Modificaciones:
*   Persona           Fecha            Motivo
*
*********************************************************
*/
${6}
endsnippet
# if else
snippet ifel
if (${1:/*condition*/}) {
	${2}
}else {
	${3}
}
endsnippet
# try catch finally
snippet try
try{
	{1}
}catch(Exception){
	throw;
}
endsnippet
snippet tryf
try{
	{1}
}finally{
	{2}
}
endsnippet
snippet trycf
try{
	{1}
}catch(Exception){
	throw;
}finally{
	{2}
}
endsnippet
# namespace
snippet name
namespace ${1}{
	{2}
}
endsnippet
# import (using)
snippet import
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
endsnippet
# properties
snippet props
private ${2:string} _${1:property_name};
/// <summary>
/// Obtiene o Establece $1
/// </summary>
public $2 ${3:$1} {
	get { return _$1; }
	set { _$1 = value; }
}${4}
endsnippet
snippet propg
public ${2:string} ${1:property_name} {
	get;
	private set;
}${3}
endsnippet
snippet privs
private string _${1:property_name} = string.Empty;
endsnippet
snippet get
get { return _${1:private_param}; }
endsnippet
snippet set
set { _${1:private_param} = value; }
endsnippet
# region
snippet region
#region ${1:region_name}
	{2}
#endregion
endsnippet
# using
snippet using
using (${1:resource}){
	${2}
}
endsnippet
# function
snippet fun
${5:public} ${1:return_type} ${2:function_name} (${3:param_type} ${4:param_name}) {
	return $1;
}
endsnippet
# database layer
snippet funds
private DataSet ${1:function_name} ( ${2:string} ${3:param_name} ){
	DataSet dsDatos = new DataSet();
	IDBManager oMan = null;
	try{
		oMan = new DBManager(DataProvider.SqlServer);
		oMan.ConnectionString = Conexion;
		oMan.ClearParameters();
		oMan.AddParameters(0, "@p$3", $3);
		oMan.Open();
		dsDatos = oMan.ExecuteDataSet(CommandType.StoredProcedure, "${4:sp_name}");
	}catch (Exception){
		throw;
	}finally{
		oMan.Close();
		oMan = null;
	}
	return dsDatos;
}
endsnippet
